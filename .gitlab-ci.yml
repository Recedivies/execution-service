stages:
  - test
  - publish
  - deploy

variables:
  ENV_FILE: .env

Test Coverage:
  stage: test
  image: golang:1.21-alpine
  script:
    - go test ./...

Publish Docker Build:
  stage: publish
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "/certs/client"
  before_script:
    - echo $DOCKER_PASSWORD | docker login -u $REGISTRY_USER --password-stdin docker.io
  script:
    - ls
    - echo $EMAIL_SENDER_NAME; echo $EMAIL_SENDER_ADDRESS; echo $EMAIL_SENDER_PASSWORD; echo $RABBITMQ_SERVER_URL; echo $ENVIRONMENT; echo $DB_SOURCE; echo $REGISTRY_USER; echo $IMAGE_NAME; echo $IMAGE_TAG
    - docker build --build-arg EMAIL_SENDER_NAME=$EMAIL_SENDER_NAME --build-arg EMAIL_SENDER_ADDRESS=$EMAIL_SENDER_ADDRESS --build-arg EMAIL_SENDER_PASSWORD=$EMAIL_SENDER_PASSWORD --build-arg DB_SOURCE=$DB_SOURCE --build-arg ENVIRONMENT=$ENVIRONMENT --build-arg RABBITMQ_SERVER_URL=$RABBITMQ_SERVER_URL -t $REGISTRY_USER/$IMAGE_NAME:$IMAGE_TAG .
    - docker push $REGISTRY_USER/$IMAGE_NAME:$IMAGE_TAG
  only:
    - main

Deploy Prod:
  stage: deploy
  image: alpine:latest
  before_script:
    - chmod 400 $SSH_KEY
    - apk update && apk add openssh-client
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $GCP_USERNAME@$GCP_STATIC_IP "
      echo "ENVIRONMENT=$ENVIRONMENT" >> $ENV_FILE;
      echo "DB_SOURCE=$DB_SOURCE" >> $ENV_FILE;
      echo "RABBITMQ_SERVER_URL=$RABBITMQ_SERVER_URL" >> $ENV_FILE;
      echo "EMAIL_SENDER_NAME=$EMAIL_SENDER_NAME" >> $ENV_FILE;
      echo "EMAIL_SENDER_ADDRESS=$EMAIL_SENDER_ADDRESS" >> $ENV_FILE;
      echo "EMAIL_SENDER_PASSWORD=$EMAIL_SENDER_PASSWORD" >> $ENV_FILE;
      cat $ENV_FILE;
      ls -al;
      docker container rm -f $CONTAINER_NAME || true &&
      docker image rm -f $REGISTRY_USER/$IMAGE_NAME:$IMAGE_TAG || true &&
      docker run --name $CONTAINER_NAME -d -p 80:8080 --restart unless-stopped $REGISTRY_USER/$IMAGE_NAME:$IMAGE_TAG"
  only:
    - main
